{
    "Analysis": {
        "CodingStyle-Naming.Function": {
            "_active": true,
            "exceptions": [
                "__TI_auto_init",
                "_c_int00",
                "canMessageNotification",
                "DllMain",
                "dmaGroupANotification",
                "ecapNotification",
                "exit",
                "main",
                "spiNotification",
                "vApplicationGetIdleTaskMemory",
                "vApplicationIdleHook",
                "WinMain",
                "wmain",
                "wWinMain"
            ],
            "languages": [
                "C",
                "Assembler"
            ],
            "msg": {
                "non_compliant_name": {
                    "text": "Function names shall use the naming convention (prefix.upper())_PascalCase."
                }
            },
            "naming_convention": "^[A-Z][A-Z0-9]{1,4}_([A-Z]([a-z]|[0-9]{1,}[A-Za-z]))[A-Za-z0-9_]{0,}"
        },
        "CodingStyle-Naming.GlobalVariable": {
            "_active": true,
            "languages": [
                "C",
                "Assembler"
            ],
            "msg": {
                "non_compliant_name": {
                    "text": "Names of global variables shall use the naming convention (prefix.lower())_camelCase (and optional unit suffix preceded by _)."
                }
            },
            "naming_convention": "^[a-z][a-z0-9]{1,4}_(([a-z]|[0-9]{1,}[A-Za-z]))[A-Za-z0-9_]{0,}"
        },
        "CodingStyle-Naming.LocalVariable": {
            "_active": true,
            "languages": [
                "C",
                "Assembler"
            ],
            "msg": {
                "non_compliant_name": {
                    "text": "Names of local variables shall use the naming convention (prefix.lower())_camelCase (and optional unit suffix preceded by _)."
                }
            },
            "naming_convention": "^(([a-z]|[0-9]{1,}[A-Za-z]))[A-Za-z0-9_]{0,}"
        },
        "CodingStyle-Naming.Macro": {
            "_active": true,
            "exclude_in_macros": [
                "GEN_REPEAT_U*u"
            ],
            "languages": [
                "C",
                "Assembler"
            ],
            "msg": {
                "non_compliant_name": {
                    "text": "Macro names shall use the naming convention '(prefix.upper())_ALL_CAPS' (and optional unit suffix preceded by _) or for include guards 'FOXBMS__FILENAME_H_'."
                }
            },
            "naming_convention": "(([A-Z][A-Z0-9]{1,4})_([A-Z0-9]([A-Z0-9_]*)).*)(?<!_)$|(FOXBMS__[A-Z0-9_]{1,}_H_)"
        },
        "CodingStyle-Naming.Parameter": {
            "_active": true,
            "excludes": [
                "*src/app/driver/sbc/fs8x_driver/*",
                "*src/hal/*",
                "*src/os/*",
                "C:/ti/*"
            ],
            "languages": [
                "C",
                "Assembler"
            ],
            "msg": {
                "non_compliant_name": {
                    "text": "Names of parameters shall use the naming convention camelCase (and optional unit suffix preceded by _)."
                }
            },
            "naming_convention": "([a-z0-9]+)[A-Za-z0-9]*(_.*)?"
        },
        "CodingStyle-Naming.StructField": {
            "_active": true,
            "msg": {
                "non_compliant_name": {
                    "text": "Names of struct members shall use camelCase (and optional unit suffix preceded by _)."
                }
            },
            "naming_convention": "([a-z0-9]+)[A-Za-z0-9]*(_.*)?"
        },
        "CodingStyle-Naming.TypedefedEnum": {
            "_active": true,
            "_copy_from": "CodingStyle-Naming.UserType",
            "apply_to_renaming_of_classes": false,
            "apply_to_renaming_of_enums": true,
            "apply_to_renaming_of_other_types": false,
            "apply_to_renaming_of_structs": false,
            "apply_to_renaming_of_unions": false,
            "languages": [
                "C",
                "Assembler"
            ],
            "msg": {
                "non_compliant_name": {
                    "text": "Names of user-defined enum types shall use the naming convention (prefix.upper())_ALL_CAPS_e."
                }
            },
            "naming_convention": "^[A-Z][A-Z0-9]{1,4}_([A-Z0-9_]*)_e"
        },
        "CodingStyle-Naming.TypedefedFuncPtr": {
            "_active": true,
            "_copy_from": "CodingStyle-Naming.UserType",
            "apply_to_renaming_of_classes": false,
            "apply_to_renaming_of_enums": false,
            "apply_to_renaming_of_other_types": true,
            "apply_to_renaming_of_structs": false,
            "apply_to_renaming_of_unions": false,
            "languages": [
                "C",
                "Assembler"
            ],
            "msg": {
                "non_compliant_name": {
                    "text": "Names of user-defined function ptr types shall use the naming convention (prefix.upper())_ALL_CAPS_f."
                }
            },
            "naming_convention": "^[A-Z][A-Z0-9]{1,4}_([A-Za-z0-9_]*)_f"
        },
        "CodingStyle-Naming.TypedefedStruct": {
            "_active": true,
            "_copy_from": "CodingStyle-Naming.UserType",
            "apply_to_renaming_of_classes": false,
            "apply_to_renaming_of_enums": false,
            "apply_to_renaming_of_other_types": false,
            "apply_to_renaming_of_structs": true,
            "apply_to_renaming_of_unions": false,
            "languages": [
                "C",
                "Assembler"
            ],
            "msg": {
                "non_compliant_name": {
                    "text": "Names of user-defined struct types shall use the naming convention (prefix.upper())_ALL_CAPS_s."
                }
            },
            "naming_convention": "^[A-Z][A-Z0-9]{1,4}_([A-Z0-9_]*)_s"
        }
    },
    "_Format": "1.0",
    "_Version": "7.5.2",
    "_VersionNum": [
        7,
        5,
        2,
        11578
    ]
}
